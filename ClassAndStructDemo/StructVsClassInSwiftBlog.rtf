{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs24 \cf0 Struct VS Class in Swift 
\f1\b0 \
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 class
\f1\b0  is reference type , When you make a copy of a reference type, the new variable refers to the same memory location as the thing you are copying. This means that changing one will change the other since they both refer to the same memory location
\f0\b . 
\f1\b0 Class instances are stored on Heap memory.
\f0\b \
e.g.\
   
\f1\b0 class SomeClass \{\
    var name: String\
    init(name: String) \{\
        self.name = name\
    \}\
\}\
\
var aClass = SomeClass(name: "Bob")\
var bClass = aClass // aClass and bClass now reference the same instance!\
bClass.name = "Sue"\
\
println(aClass.name) // "Sue"\
println(bClass.name) // "Sue"\

\f0\b \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f1\b0 \cf0 Must declare initialiser (constructer)\
Has deinitialisers\
Can inherit from other classes\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 \
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 struct
\f1\b0  is value type, When you make a copy of a value type, it copies all the data from the thing you are copying into the new variable. They are 2 separate things and changing one does not affect the other, struct object are store in stack memory ,means struct follows first in last out.\

\f0\b \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 e.g.\
   
\f1\b0 struct SomeStruct \{\
    var name: String\
    init(name: String) \{\
        self.name = name\
    \}\
\}\
\
var aStruct = SomeStruct(name: "Bob")\
var bStruct = aStruct // aStruct and bStruct are two structs with the same value!\
bStruct.name = "Sue"\
\
println(aStruct.name) // "Bob"\
println(bStruct.name) // "Sue"\
\
 1.	It has free initialiser for you , you dont have to declare initaliser if you do free initialiser will be overwritten by your declared initialiser\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 Dont have deinitialiser\
Cannot inherit from other struct\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
}